using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace StarMeatsPos
{
    public partial class Staff : Form
    {
        public Staff()
        {
            InitializeComponent();
        }

        private void employeeBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            this.Validate();
            this.employeeBindingSource.EndEdit();
            this.tableAdapterManager.UpdateAll(this.starMeatsDataSet);

        }

        private void Staff_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'dataSet1.Employee' table. You can move, or remove it, as needed.
            this.employeeTableAdapter2.Fill(this.dataSet1.Employee);
            // TODO: This line of code loads data into the 'group3DataSet.Employee' table. You can move, or remove it, as needed.

            // TODO: This line of code loads data into the 'starMeatsDataSet.Employee' table. You can move, or remove it, as needed.
            //this.employeeTableAdapter.Fill(this.starMeatsDataSet.Employee);
            ToolTip toolTip = new ToolTip();
            toolTip.SetToolTip(textBoxStaffName,"Enter Employee name u are looking for");
            toolTip.SetToolTip(textBoxStaffSurname, "Enter Employee surname u are looking for");
            toolTip.SetToolTip(buttonFirst, "Takes you to the top for the grid");
            toolTip.SetToolTip(buttonPrevious, "Takes you one up on the grid");
            toolTip.SetToolTip(buttonNext, "Takes you one down on the grid");
            toolTip.SetToolTip(buttonLast, "Takes you to the bottom on the grid");
            toolTip.SetToolTip(textBox1, "Contains the Employee's ID ");
            toolTip.SetToolTip(textBox3, "Contains the Employee's Name ");
            toolTip.SetToolTip(textBox2, "Contains the Employee's Surname ");
            toolTip.SetToolTip(textBox5, "Contains the Employee's Number");
            toolTip.SetToolTip(textBox6, "Contains the Employee's E-mail ");
            toolTip.SetToolTip(textBox4, "Contains the Employee's Role ");
            toolTip.SetToolTip(textBox7, "Contains the Employee's Password ");
            toolTip.SetToolTip(textBox3, "Contains the Employee's Name ");
            toolTip.SetToolTip(button1, "Add new employee's details, Employee Id number will be generated by the system ");
            toolTip.SetToolTip(button2, "Update employee's details");
            toolTip.SetToolTip(button3, "Reset employee's details before editing it ");
            toolTip.SetToolTip(buttonSearch, "Search for an employee");
            if (Login.isManager == false)
            {
                buttonFirst.Visible = false;
                buttonNext.Visible = false;
                buttonPrevious.Visible = false;
                buttonLast.Visible = false;
                button1.Visible = false;
                button2.Visible = false;
                button3.Visible = false;
                button4.Visible = false;
                buttonSearch.Visible = false;
                textBoxStaffName.Visible = false;
                textBoxStaffSurname.Visible = false;
                label6.Visible = false;
                label9.Visible = false;
                groupBox1.Visible = false;
                button5.Visible = false;
                textBox1.ReadOnly = true;
                textBox2.ReadOnly = true;
                textBox3.ReadOnly = true;
                textBox4.ReadOnly = true;
                textBox5.ReadOnly = true;
                textBox6.ReadOnly = true;
                textBox7.ReadOnly = true;
                employeeTableAdapter1.FillEmployee(group3DataSet.Employee, Login.empID);
                this.employeeTableAdapter2.Fill(this.dataSet1.Employee);

                dataGridView1.Visible = false;
                textBox7.Visible = false;
                foreach (DataRow row in dataSet1.Employee.Rows)
                {
                    DataRowView current = (DataRowView)this.employeeBindingSource2.Current;
                    //MessageBox.Show(Convert.ToString(Convert.ToString(current["Employee_Id"])).Equals(Convert.ToString(Login.empID)) + " " + Convert.ToString(current["Employee_Id"]) + " " + Login.empID);
                    if (Convert.ToString(current["Employee_Id"]).Equals(Convert.ToString(Login.empID)))
                    {
                        //MessageBox.Show("Found");
                        break;
                    }
                    else
                    {
                        employeeBindingSource2.MoveNext();
                    }
                }
            }
            else {
                dataGridView1.Visible = true;
                buttonFirst.Visible = true;
                buttonNext.Visible = true;
                buttonPrevious.Visible = true;
                buttonLast.Visible = true;
                button1.Visible = true;
                button2.Visible = true;
                button3.Visible = true;
                button4.Visible = true;
                buttonSearch.Visible = true;
                textBoxStaffName.Visible = true;
                textBoxStaffSurname.Visible = true;
                label6.Visible = true;
                label9.Visible = true;
                groupBox1.Visible = true;
                button5.Visible = true;
                textBox1.ReadOnly = true;
                textBox2.ReadOnly = false;
                textBox3.ReadOnly = false;
                textBox4.ReadOnly = false;
                textBox5.ReadOnly = false;
                textBox6.ReadOnly = false;
                textBox7.ReadOnly = false;
                textBox7.Visible = true;
                this.employeeTableAdapter1.Fill(this.group3DataSet.Employee);
                this.employeeTableAdapter2.Fill(this.dataSet1.Employee);                
            }

        }

        private void buttonNext_Click(object sender, EventArgs e)
        {
            this.employeeBindingSource2.MoveNext();
        }

        private void buttonFirst_Click(object sender, EventArgs e)
        {
            this.employeeBindingSource2.MoveFirst();
        }

        private void buttonPrevious_Click(object sender, EventArgs e)
        {
            this.employeeBindingSource2.MovePrevious();
        }

        private void buttonLast_Click(object sender, EventArgs e)
        {
            this.employeeBindingSource2.MoveLast();
        }

        private void buttonSearch_Click(object sender, EventArgs e)
        {
            employeeBindingSource2.MoveFirst();
            Boolean found = false;
            if (String.IsNullOrEmpty(textBoxStaffSurname.Text))
            {
                foreach (DataRow row in dataSet1.Employee.Rows)
                {
                    DataRowView current = (DataRowView)this.employeeBindingSource2.Current;

                    if (Convert.ToString(current["Employee_Name"]).Equals(textBoxStaffName.Text))
                    {
                        found = true;
                        MessageBox.Show("Found");
                        break;
                    }
                    else
                    {
                        employeeBindingSource2.MoveNext();
                    }
                }
                if (!found)
                {
                    MessageBox.Show("Employee not found");
                }
            }
            else
            {
                foreach (DataRow row in dataSet1.Employee.Rows)
                {
                    DataRowView current = (DataRowView)this.employeeBindingSource2.Current;

                    if (Convert.ToString(current["Employee_Name"]).Equals(textBoxStaffName.Text) &&
                        (Convert.ToString(current["Employee_Surname"]).Equals(textBoxStaffSurname.Text)))
                    {
                        found = true;
                        MessageBox.Show("Found");
                        break;
                    }
                    else
                    {
                        employeeBindingSource2.MoveNext();
                    }
                }
                if (!found)
                {
                    MessageBox.Show("Employee not found");
                }
            }
        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("Are you sure you want to confirm that this order is complete?", "Confirmation", MessageBoxButtons.YesNo) == DialogResult.Yes)
            {
                bool allValidateDetails = true;
                String test;
                // test name
                bool validName = true;
                test = textBox3.Text;
                if (String.IsNullOrEmpty(test))
                {
                    validName = false;
                    allValidateDetails = false;
                }
                for (int i = 0; i < test.Length; i++)
                {
                    if (!char.IsLetter(test[i]))
                    {
                        validName = false;
                        allValidateDetails = false;
                    }
                }
                if (!validName)
                {
                    MessageBox.Show("Invalid Name");
                    textBox3.Clear();
                }
                // test surname
                bool validSurname = true;
                test = textBox2.Text;
                if (String.IsNullOrEmpty(test))
                {
                    validSurname = false;
                    allValidateDetails = false;
                }
                for (int i = 0; i < test.Length; i++)
                {
                    if (!char.IsLetter(test[i]))
                    {
                        validSurname = false;
                        allValidateDetails = false;
                    }
                }
                if (!validSurname)
                {
                    MessageBox.Show("Invalid Surname");
                    textBox2.Clear();
                }
                // number
                bool validCNumber = true;
                test = textBox5.Text;
                if (String.IsNullOrEmpty(test) || (test.Length != 10) || (test[0] != '0'))
                {
                    validCNumber = false;
                    allValidateDetails = false;
                }
                for (int i = 0; i < test.Length; i++)
                {
                    if (!char.IsDigit(test[i]))
                    {
                        validCNumber = false;
                        allValidateDetails = false;
                    }
                }
                if (!validCNumber)
                {
                    MessageBox.Show("Invalid Number");
                    textBox5.Clear();
                }
                // email
                bool validEmail = true;
                test = textBox6.Text;
                if (String.IsNullOrEmpty(test) || (test.IndexOf('@') < 0))
                {
                    validEmail = false;
                    allValidateDetails = false;
                }
                if (!validEmail)
                {
                    MessageBox.Show("Invalid E-mail");
                    textBox6.Clear();
                }
                // password
                bool validPassword = true;
                test = textBox8.Text;
                if (String.IsNullOrEmpty(test))
                {
                    validPassword = false;
                    allValidateDetails = false;
                }
                if (!validPassword)
                {
                    MessageBox.Show("Invalid Password");
                    textBox8.Clear();
                }
                //
                if (allValidateDetails)
                {
                    employeeTableAdapter1.Insert(Convert.ToString(textBox3.Text), Convert.ToString(textBox2.Text), Convert.ToString(textBox5.Text),
                        Convert.ToString(textBox6.Text), Convert.ToString(textBox4.Text), Convert.ToString(textBox8.Text));
                    //
                    this.employeeTableAdapter1.Fill(this.group3DataSet.Employee);
                    this.employeeTableAdapter2.Fill(this.dataSet1.Employee);
                    label1.Visible = true;
                    textBox1.Visible = true;
                    textBox7.Clear();
                    // textBox7.Visible = false;
                    textBox8.Clear();
                    label8.Visible = false;
                    button1.Enabled = false;
                    button2.Enabled = true;
                    button5.Enabled = true;
                    textBox8.Visible = false;
                    checkBox1.Visible = true;
                    MessageBox.Show("Empolyee's details have been saved");

                }
                else
                {
                    MessageBox.Show("Empolyee's details have not been saved, check entered details");
                }
            }
            else
            {
                label1.Visible = true;
                textBox1.Visible = true;
                //textBox7.Clear();
                //textBox7.Visible = false;
                label8.Visible = false;
                button1.Enabled = false;
                button2.Enabled = true;
                button5.Enabled = true;
                textBox8.Visible = false;
                checkBox1.Visible = true;
                this.employeeTableAdapter1.Fill(this.group3DataSet.Employee);
                MessageBox.Show("Empolyee's new details have been removed");
                this.employeeTableAdapter2.Fill(this.dataSet1.Employee);
            }
        }

        private void button3_Click(object sender, EventArgs e)
        {
            this.employeeTableAdapter1.Fill(this.group3DataSet.Employee);
            this.employeeTableAdapter2.Fill(this.dataSet1.Employee);
            MessageBox.Show("Employee's details have been reloaded");
        }
        
        

        private void button2_Click(object sender, EventArgs e)
        {
            if ((MessageBox.Show("Are you sure you want to confirm these changes?", "Confirmation", MessageBoxButtons.YesNo)) == DialogResult.Yes) {
                bool allValidateDetails = true;
                String test;
                // test name
                bool validName = true;
                test = textBox3.Text;
                if (String.IsNullOrEmpty(test))
                {
                    validName = false;
                    allValidateDetails = false;
                }
                for (int i = 0; i < test.Length; i++)
                {
                    if (!char.IsLetter(test[i]))
                    {
                        validName = false;
                        allValidateDetails = false;
                    }
                }
                if (!validName)
                {
                    MessageBox.Show("Invalidate Name");
                    textBox3.Clear();
                }
                // test surname
                bool validSurname = true;
                test = textBox2.Text;
                if (String.IsNullOrEmpty(test))
                {
                    validSurname = false;
                    allValidateDetails = false;
                }
                for (int i = 0; i < test.Length; i++)
                {
                    if (!char.IsLetter(test[i]))
                    {
                        validSurname = false;
                        allValidateDetails = false;
                    }
                }
                if (!validSurname)
                {
                    MessageBox.Show("Invalidate Surname");
                    textBox2.Clear();
                }
                // number
                bool validCNumber = true;
                test = textBox5.Text;
                if (String.IsNullOrEmpty(test) || (test.Length != 10) || (test[0] != '0'))
                {
                    validCNumber = false;
                    allValidateDetails = false;
                }
                for (int i = 0; i < test.Length; i++)
                {
                    if (!char.IsDigit(test[i]))
                    {
                        validCNumber = false;
                        allValidateDetails = false;
                    }
                }
                if (!validCNumber)
                {
                    MessageBox.Show("Invalidate Number");
                    textBox5.Clear();
                }
                // email
                bool validEmail = true;
                test = textBox6.Text;
                if (String.IsNullOrEmpty(test) || (test.IndexOf('@') < 0))
                {
                    validEmail = false;
                    allValidateDetails = false;
                }
                if (!validEmail)
                {
                    MessageBox.Show("Invalidate E-mail");
                    textBox6.Clear();
                }
                // password
                bool validPassword = true;
                test = textBox7.Text;
                /*if (String.IsNullOrEmpty(test))
                {
                    validPassword = false;
                    allValidateDetails = false;
                }*/
                /*if (!validPassword)
                {
                    MessageBox.Show("Invalidate Password");
                    textBox7.Clear();
                }*/
                //
                if (allValidateDetails) {

                    employeeTableAdapter1.UpdateQuery(Convert.ToString(textBox3.Text), Convert.ToString(textBox2.Text), Convert.ToString(textBox5.Text),
                        Convert.ToString(textBox6.Text), Convert.ToString(textBox4.Text), Convert.ToString(textBox7.Text), Convert.ToInt32(textBox1.Text));
                    MessageBox.Show("Empolyee's details Updated");
                    this.employeeTableAdapter1.Fill(group3DataSet.Employee);
                    employeeTableAdapter2.UpdateQuery(Convert.ToBoolean(checkBox1.Checked), Convert.ToInt32(textBox1.Text));
                    this.employeeTableAdapter1.Fill(this.group3DataSet.Employee);
                    this.employeeTableAdapter2.Fill(this.dataSet1.Employee);
                    //this.employeeTableAdapter1.Fill(this.starMeatsDataSet.Employee);
                }
                else
                {
                    MessageBox.Show("Empolyee's details not Updated, check entered details");
                }
            }
            else
            {
                this.employeeTableAdapter1.Fill(group3DataSet.Employee);
                this.employeeTableAdapter2.Fill(this.dataSet1.Employee);
            }
        }

        private void button4_Click(object sender, EventArgs e)
        {
            textBoxStaffName.Clear();
            textBoxStaffSurname.Clear();
            //employeeTableAdapter1.Fill(group3DataSet.Employee);
        }

        private void button5_Click(object sender, EventArgs e)
        {
            label1.Visible = false;
            textBox1.Visible = false;
            textBox7.Visible = true;
            textBox1.Clear();
            textBox3.Clear();
            textBox2.Clear();
            textBox5.Clear();
            textBox6.Clear();
            textBox4.Clear();
            textBox7.Clear();
            textBox8.Visible = true;
            checkBox1.Visible = false;
            label8.Visible = true;
            button1.Enabled = true;
            button2.Enabled = false;
            button5.Enabled = false;
            MessageBox.Show("Now Enter New Employee Details");
        }
    }
}
